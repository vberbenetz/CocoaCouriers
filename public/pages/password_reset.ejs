<!DOCTYPE html>
<!--[if IE 8]>			<html class="ie ie8"> <![endif]-->
<!--[if IE 9]>			<html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->

<!-- Include the head template -->
<head>
    <%- include templates/head.ejs %>

    <link href="/assets/plugins/spinner/spinner.css" rel="stylesheet" type="text/css" />
</head>

<body class="smoothscroll enable-animation font-spin">

<!-- wrapper -->
<div id="wrapper" ng-app="resetRequestApp">

    <!-- Include the header template -->
    <%- include templates/header.ejs %>

    <!-- -->
    <section class="ng-cloak" ng-controller="resetRequestCtrl" ng-cloak>

        <div class="container" ng-hide="tokenResetForm">
            <div class="row heading-title heading-dotted text-center">
                <h1>
                    Forgot Your Password?
                </h1>
            </div>

            <div class="row">

                <div class="col-md-6 col-md-offset-3">

                    <div class="box-static padding-30">
                        <form class="nomargin" id="resetForm">
                            <div class="clearfix">
                                <div id="email" class="form-group">
                                    <input type="text" class="form-control" placeholder="Email" ng-model="formData.email" />
                                </div>
                            </div>
                            <div class="row margin-right-5">
                                <button ng-hide="processingReq" ng-disabled="processingReq" id="submitFormButton" type="submit" class="btn btn-lg btn-success pull-right" ng-click="requestReset()" >Reset</button>
                                <div ng-show="processingReq" class="three-quarters-loader pull-right"></div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-md-offset-3">
                <h5 id="resetComplete" class="alert alert-success" ng-show="reqSuccess">An email has been sent to this address with reset instructions</h5>
                <h5 id="resetComplete" class="alert alert-danger" ng-show="reqFail">Please make sure the email you entered is correct</h5>
            </div>
        </div>

        <div class="container" ng-show="tokenResetForm">
            <div class="row heading-title heading-dotted text-center">
                <h1>
                    Reset Your Password
                </h1>
            </div>

            <div class="row">

                <div class="col-md-6 col-md-offset-3">

                    <div class="box-static padding-30">
                        <form class="nomargin" id="resetForm">
                            <div class="clearfix">
                                <div id="email" class="form-group" ng-class="{ 'has-error': validationErrors.email }">
                                    <input type="text" class="form-control" placeholder="Email" ng-model="formData.email" />
                                </div>
                            </div>
                            <div class="clearfix">
                                <div id="pass" class="form-group" ng-class="{ 'has-error': validationErrors.password }">
                                    <input type="password" class="form-control" placeholder="New Password" ng-model="formData.newPassword" />
                                    <p ng-show="validationErrors.password">{{ validationErrors.password }}</p>
                                </div>
                            </div>
                            <div class="clearfix">
                                <div id="passConfirm" class="form-group" ng-class="{ 'has-error': validationErrors.password }">
                                    <input type="password" class="form-control" placeholder="Confirm New Password" ng-model="confirmPassword" />
                                </div>
                            </div>
                            <div class="row margin-right-5">
                                <button ng-hide="processingReq" ng-disabled="processingReq" id="submitFormButton" type="submit" class="btn btn-lg btn-success pull-right" ng-click="resetPassword()" >Reset Password</button>
                                <div ng-show="processingReq" class="three-quarters-loader pull-right"></div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-md-offset-3">
                <h5 id="resetComplete" class="alert alert-success" ng-show="reqSuccess">Successfully Reset Your Password. Please <a href="/signin"><strong>Login</strong></a> with your new password</h5>
                <h5 id="resetComplete" class="alert alert-danger" ng-show="reqFail">Please make sure the email you entered is correct. If you continue to experience issues, please try to <a href="/password-reset"><strong>Reset</strong></a> your password again.</h5>
            </div>
        </div>

    </section>
    <!-- / -->

    <div class="row secondary-sep-100 bg-emerald-green">
        <div class="col-sm-12 text-center margin-top-20">
            <h3 class="text-white font-spin">Sign up for as little as $24.99 per month, shipping included! <a class="btn btn-lg btn-default" href="/subscribe"><strong>Subscribe</strong></a></h3>
        </div>
    </div>

    <%- include templates/footer.ejs %>

</div>
<!-- /wrapper -->

<script type="text/javascript" src="/assets/plugins/angular/angular.min.js"></script>

<script type="text/javascript">
    angular.module('resetRequestApp', [])
            .controller('resetRequestCtrl', function ($scope, $http, $location) {

                var params = $location.absUrl().split('?')[1];

                $scope.qParams = {};

                if ( (params) && (params.length > 0) ) {
                    var pairs = params.split('&');
                    var pair;
                    var i;
                    for (i in pairs) {
                        if (pairs[i] === '') continue;

                        pair = pairs[i].split('=');
                        if (decodeURIComponent(pair[0]) === 'tk') {
                            $scope.qParams.tk = decodeURIComponent(pair[1]);
                            break;
                        }
                    }
                }

                $scope.formData = {
                    email: '',
                    newPassword: ''
                };
                $scope.confirmPassword = '';

                $scope.processingReq = false;

                if ($scope.qParams.tk) {
                    $scope.tokenResetForm = true;
                }
                else {
                    $scope.formData = {
                        email: ''
                    };
                }

                $scope.resetPassword = function() {
                    var validationFail = false;

                    $scope.processingReq = true;
                    $scope.reqSuccess = false;
                    $scope.reqFail = false;

                    $scope.validationErrors = {};

                    if (!$scope.formData.newPassword) {
                        $scope.validationErrors.password = 'Please enter a password of at least 6 characters';
                        $scope.processingReq = false;
                        return;
                    }
                    else if ($scope.formData.newPassword.length < 6) {
                        $scope.validationErrors.password = 'Please enter a password of at least 6 characters';
                        $scope.processingReq = false;
                        return;
                    }
                    else if ($scope.formData.newPassword.length > 200) {
                        $scope.validationErrors.password = 'Please enter a password that is between 6 and 200 characters';
                        $scope.processingReq = false;
                        return;
                    }
                    else if ($scope.formData.newPassword !== $scope.confirmPassword) {
                        $scope.validationErrors.password = 'Passwords do not match';
                        $scope.processingReq = false;
                        return;
                    }

                    $http({
                        url: '/pr',
                        method: 'POST',
                        data: {
                            email: $scope.formData.email,
                            token: $scope.qParams.tk,
                            newPassword: $scope.formData.newPassword
                        }
                    })
                            .success(function(data) {
                                $scope.reqSuccess = true;
                                $scope.processingReq = false;
                            })
                            .error(function(error) {
                                $scope.reqFail = true;
                                $scope.processingReq = false;
                                $scope.validationErrors.email = true;
                            });
                };

                $scope.requestReset = function () {
                    $scope.processingReq = true;
                    $scope.reqSuccess = false;
                    $scope.reqFail = false;

                    $http({
                        url: '/pass-reset-request',
                        method: 'POST',
                        data: {
                            email: $scope.formData.email
                        }
                    })
                    .success(function(data) {
                        $scope.reqSuccess = true;
                        $scope.processingReq = false;
                    })
                    .error(function(error) {
                        $scope.reqFail = true;
                        $scope.processingReq = false;
                    });
                };



            });
</script>

</body>
</html>